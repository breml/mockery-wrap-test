// Code generated by mockery. DO NOT EDIT.
// template: wrappers/fmt_print.gotmpl

package middleware

import (
	"context"
	"fmt"
	"strings"

	"github.com/breml/mockery-wrap-test/pkg"
)

// ExamplerWithFmtPrint implements pkg.Exampler that is instrumented with fmt.Print on entry and exit.
type ExamplerWithFmtPrint struct {
	_base pkg.Exampler
}

// NewExamplerWithFmtPrint instruments an implementation of the pkg.Exampler with fmt.Print on entry and exit.
func NewExamplerWithFmtPrint(base pkg.Exampler) ExamplerWithFmtPrint {
	return ExamplerWithFmtPrint{
		_base: base,
	}
}

// Example implements pkg.Exampler.
func (_d ExamplerWithFmtPrint) Example() {
	fmt.Print("=> calling Example")
	fmt.Println()

	defer func() {
		fmt.Print("<= method Example returned")
		fmt.Println()
	}()

	_d._base.Example()
}

// ExampleWithArgs implements pkg.Exampler.
func (_d ExamplerWithFmtPrint) ExampleWithArgs(arg0 int, arg1 string) {
	fmt.Print("=> calling ExampleWithArgs")
	fmt.Printf(" with args: "+strings.Repeat("%#v, ", 2), arg0, arg1)
	fmt.Println()

	defer func() {
		fmt.Print("<= method ExampleWithArgs returned")
		fmt.Println()
	}()

	_d._base.ExampleWithArgs(arg0, arg1)
}

// ExampleWithArgsAndVariadicArgs implements pkg.Exampler.
func (_d ExamplerWithFmtPrint) ExampleWithArgsAndVariadicArgs(arg0 int, args ...string) {
	fmt.Print("=> calling ExampleWithArgsAndVariadicArgs")
	fmt.Printf(" with args: "+strings.Repeat("%#v, ", 2), arg0, args)
	fmt.Println()

	defer func() {
		fmt.Print("<= method ExampleWithArgsAndVariadicArgs returned")
		fmt.Println()
	}()

	_d._base.ExampleWithArgsAndVariadicArgs(arg0, args...)
}

// ExampleWithContext implements pkg.Exampler.
func (_d ExamplerWithFmtPrint) ExampleWithContext(ctx context.Context) {
	fmt.Print("=> calling ExampleWithContext")
	fmt.Printf(" with args: "+strings.Repeat("%#v, ", 1), ctx)
	fmt.Println()

	defer func() {
		fmt.Print("<= method ExampleWithContext returned")
		fmt.Println()
	}()

	_d._base.ExampleWithContext(ctx)
}

// ExampleWithContextAndArgs implements pkg.Exampler.
func (_d ExamplerWithFmtPrint) ExampleWithContextAndArgs(ctx context.Context, arg0 int, arg1 string) {
	fmt.Print("=> calling ExampleWithContextAndArgs")
	fmt.Printf(" with args: "+strings.Repeat("%#v, ", 3), ctx, arg0, arg1)
	fmt.Println()

	defer func() {
		fmt.Print("<= method ExampleWithContextAndArgs returned")
		fmt.Println()
	}()

	_d._base.ExampleWithContextAndArgs(ctx, arg0, arg1)
}

// ExampleWithContextArgsAndVariadicArgs implements pkg.Exampler.
func (_d ExamplerWithFmtPrint) ExampleWithContextArgsAndVariadicArgs(ctx context.Context, arg0 int, args ...string) {
	fmt.Print("=> calling ExampleWithContextArgsAndVariadicArgs")
	fmt.Printf(" with args: "+strings.Repeat("%#v, ", 3), ctx, arg0, args)
	fmt.Println()

	defer func() {
		fmt.Print("<= method ExampleWithContextArgsAndVariadicArgs returned")
		fmt.Println()
	}()

	_d._base.ExampleWithContextArgsAndVariadicArgs(ctx, arg0, args...)
}

// ExampleWithErrorReturn implements pkg.Exampler.
func (_d ExamplerWithFmtPrint) ExampleWithErrorReturn() (err error) {
	fmt.Print("=> calling ExampleWithErrorReturn")
	fmt.Println()

	defer func() {
		fmt.Print("<= method ExampleWithErrorReturn returned")
		if err != nil {
			fmt.Print(" with error")
		}
		fmt.Printf(" with returns: "+strings.Repeat("%#v, ", 1), err)

		fmt.Println()
	}()

	return _d._base.ExampleWithErrorReturn()
}

// ExampleWithReturn implements pkg.Exampler.
func (_d ExamplerWithFmtPrint) ExampleWithReturn() (s string) {
	fmt.Print("=> calling ExampleWithReturn")
	fmt.Println()

	defer func() {
		fmt.Print("<= method ExampleWithReturn returned")
		fmt.Printf(" with returns: "+strings.Repeat("%#v, ", 1), s)

		fmt.Println()
	}()

	return _d._base.ExampleWithReturn()
}

// ExampleWithReturnAndError implements pkg.Exampler.
func (_d ExamplerWithFmtPrint) ExampleWithReturnAndError() (s string, err error) {
	fmt.Print("=> calling ExampleWithReturnAndError")
	fmt.Println()

	defer func() {
		fmt.Print("<= method ExampleWithReturnAndError returned")
		if err != nil {
			fmt.Print(" with error")
		}
		fmt.Printf(" with returns: "+strings.Repeat("%#v, ", 2), s, err)

		fmt.Println()
	}()

	return _d._base.ExampleWithReturnAndError()
}

// ExampleWithVariadicArgs implements pkg.Exampler.
func (_d ExamplerWithFmtPrint) ExampleWithVariadicArgs(args ...string) {
	fmt.Print("=> calling ExampleWithVariadicArgs")
	fmt.Printf(" with args: "+strings.Repeat("%#v, ", 1), args)
	fmt.Println()

	defer func() {
		fmt.Print("<= method ExampleWithVariadicArgs returned")
		fmt.Println()
	}()

	_d._base.ExampleWithVariadicArgs(args...)
}

// FullExample implements pkg.Exampler.
func (_d ExamplerWithFmtPrint) FullExample(ctx context.Context, arg0 int, arg1 string, args ...string) (s string, err error) {
	fmt.Print("=> calling FullExample")
	fmt.Printf(" with args: "+strings.Repeat("%#v, ", 4), ctx, arg0, arg1, args)
	fmt.Println()

	defer func() {
		fmt.Print("<= method FullExample returned")
		if err != nil {
			fmt.Print(" with error")
		}
		fmt.Printf(" with returns: "+strings.Repeat("%#v, ", 2), s, err)

		fmt.Println()
	}()

	return _d._base.FullExample(ctx, arg0, arg1, args...)
}
